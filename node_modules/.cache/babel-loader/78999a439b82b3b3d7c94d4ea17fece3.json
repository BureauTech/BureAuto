{"remainingRequest":"/Users/charlesramos/Documents/Aulas/Bureauto/BureAuto/node_modules/thread-loader/dist/cjs.js!/Users/charlesramos/Documents/Aulas/Bureauto/BureAuto/node_modules/babel-loader/lib/index.js!/Users/charlesramos/Documents/Aulas/Bureauto/BureAuto/src/views/Messages/Messages.js?vue&type=script&lang=js&","dependencies":[{"path":"/Users/charlesramos/Documents/Aulas/Bureauto/BureAuto/src/views/Messages/Messages.js","mtime":1637758833888},{"path":"/Users/charlesramos/Documents/Aulas/Bureauto/BureAuto/babel.config.js","mtime":1637759013871},{"path":"/Users/charlesramos/Documents/Aulas/Bureauto/BureAuto/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/charlesramos/Documents/Aulas/Bureauto/BureAuto/node_modules/thread-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/charlesramos/Documents/Aulas/Bureauto/BureAuto/node_modules/babel-loader/lib/index.js","mtime":315532800000}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:"},{"version":3,"sources":["/Users/charlesramos/Documents/Aulas/Bureauto/BureAuto/src/views/Messages/Messages.js"],"names":["ChatWindow","axios","config","name","components","data","rooms","messages","currentUserId","$store","getters","getUser","use_cod","message","messagesLoaded","isConnected","textMessages","ROOMS_EMPTY","ROOM_EMPTY","NEW_MESSAGES","MESSAGES_EMPTY","CONVERSATION_STARTED","TYPE_MESSAGE","SEARCH","roomId","methods","getUserChats","$route","query","get","chat","map","cha_cod","roomName","adv_model_description","use_nickname","adv_use_nickname","avatar","SERVER_URL","adv_images","lastMessage","content","last_message","senderId","use_name","users","_id","username","getMessages","room","push","mes_cod","mes_text","mes_use_cod","timestamp","Date","mes_created_at","toTimeString","slice","disableActions","disableReactions","sendMessage","saveMessage","newMessage","$socket","emit","indexOfChatWithNewMessage","e","indexOf","console","log","chatWithNewMessage","splice","post","success","beforeMount","mounted","disconnect","connect","sockets","forEach","getMessageSent","mes_cha_cod"],"mappings":"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","sourcesContent":["import ChatWindow from \"vue-advanced-chat\"\nimport \"vue-advanced-chat/dist/vue-advanced-chat.css\"\nimport axios from \"@/axios.js\"\nimport config from \"../../config\"\n\nexport default {\n    name: \"Message\",\n    components: {\n        ChatWindow\n    },\n    data() {\n        return {\n            rooms: [],\n            messages: [],\n            currentUserId: this.$store.getters.getUser.use_cod,\n            message: \"\",\n            messagesLoaded: false,\n            isConnected: false,\n            textMessages: {\n                ROOMS_EMPTY: \"Não há conversas!\",\n                ROOM_EMPTY: \"Inicie uma conversa aqui!\",\n                NEW_MESSAGES: \"Novas mensagens\",\n                MESSAGES_EMPTY: \"Mensagem vazia\",\n                CONVERSATION_STARTED: \"Início da conversa:\",\n                TYPE_MESSAGE: \"Mensagem\",\n                SEARCH: \"Pesquisar\"\n            },\n            roomId: \"\"\n        }\n    },\n    methods: {\n        getUserChats: async function() {\n            if (this.$route.query.roomId) {\n                this.roomId = this.$route.query.roomId\n            }\n            const chat = await axios.get(\"/chat/userChats/\")\n            this.rooms = chat.data.data.map((chat) => {\n                chat = {\n                    roomId: chat.cha_cod,\n                    roomName:\n            chat.adv_model_description +\n            \" - \" +\n            (this.$store.getters.getUser.use_nickname === chat.use_nickname\n                ? chat.adv_use_nickname\n                : chat.use_nickname),\n                    avatar: config.SERVER_URL + chat.adv_images,\n                    lastMessage: {\n                        content: chat.last_message,\n                        senderId: chat.use_name\n                    },\n                    users: [{\n                        _id: 0,\n                        username: chat.use_name\n                    }],\n                    messages: this.messages\n                }\n                return chat\n            })\n            this.messagesLoaded = true\n        },\n\n        getMessages: async function({room}) {\n            const message = await axios.get(`/message/messages/${room.roomId}`)\n            this.messages = []\n            message.data.data.map((message) => {\n                this.messages.push({\n                    _id: message.mes_cod,\n                    content: message.mes_text,\n                    senderId: message.mes_use_cod,\n                    timestamp: new Date(message.mes_created_at)\n                        .toTimeString()\n                        .slice(0, 5),\n                    disableActions: true,\n                    disableReactions: true\n                })\n\n                return\n            })\n\n            this.messagesLoaded = true\n        },\n        sendMessage: async function({content, roomId}) {\n            const newMessage = await this.saveMessage({\n                message: content,\n                cha_cod: roomId\n            })\n            this.$socket.emit(\"sendMessage\", newMessage)\n            //Reordenar chats após envio de mensagem\n            const indexOfChatWithNewMessage = this.rooms.map(e => e.roomId).indexOf(roomId)\n            console.log(indexOfChatWithNewMessage)\n            const chatWithNewMessage = this.rooms[indexOfChatWithNewMessage]\n            console.log(chatWithNewMessage)\n            this.rooms.splice(indexOfChatWithNewMessage, 1)\n            this.rooms.splice(0, 0, chatWithNewMessage)\n            this.getMessages({content, roomId})\n        },\n        saveMessage: async function(message) {\n            const {data} = await axios.post(\"/message/create/\", message)\n            if (data.success) {\n                return data.data\n            }\n        }\n    },\n    beforeMount: function() {\n        this.getUserChats()\n        this.messagesLoaded = true\n    },\n    mounted: function() {\n        this.$socket.disconnect()\n        this.$socket.connect()\n    },\n\n    sockets: {\n        connect: function() {\n            this.isConnected = true\n            this.rooms.forEach((chat) => {\n                this.$socket.emit(\"joinRoom\", chat.roomId)\n            })\n        },\n        disconnect: function() {\n            this.isConnected = false\n        },\n        getMessageSent: function(message) {\n            message = {\n                _id: message.mes_cod,\n                roomId: message.mes_cha_cod,\n                content: message.mes_text,\n                senderId: message.mes_use_cod,\n                timestamp: new Date(message.mes_created_at).toTimeString().slice(0, 5),\n                disableActions: true,\n                disableReactions: true\n            }\n            this.messages.push(message)\n\n            for (const chat of this.rooms) {\n                if (chat.roomId === message.roomId) {\n                    chat.lastMessage.content = message.content\n                    break\n                }\n            }\n        }\n    }\n}\n"]}]}