{"remainingRequest":"/Users/charlesramos/Documents/Aulas/Bureauto/BureAuto/node_modules/thread-loader/dist/cjs.js!/Users/charlesramos/Documents/Aulas/Bureauto/BureAuto/node_modules/babel-loader/lib/index.js!/Users/charlesramos/Documents/Aulas/Bureauto/BureAuto/src/views/UploadUser/UploadUser.js?vue&type=script&scoped=true&lang=js&","dependencies":[{"path":"/Users/charlesramos/Documents/Aulas/Bureauto/BureAuto/src/views/UploadUser/UploadUser.js","mtime":1637758833889},{"path":"/Users/charlesramos/Documents/Aulas/Bureauto/BureAuto/babel.config.js","mtime":1637759013871},{"path":"/Users/charlesramos/Documents/Aulas/Bureauto/BureAuto/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/charlesramos/Documents/Aulas/Bureauto/BureAuto/node_modules/thread-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/charlesramos/Documents/Aulas/Bureauto/BureAuto/node_modules/babel-loader/lib/index.js","mtime":315532800000}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:aW1wb3J0IF9hc3luY1RvR2VuZXJhdG9yIGZyb20gIi9Vc2Vycy9jaGFybGVzcmFtb3MvRG9jdW1lbnRzL0F1bGFzL0J1cmVhdXRvL0J1cmVBdXRvL25vZGVfbW9kdWxlcy9AYmFiZWwvcnVudGltZS9oZWxwZXJzL2VzbS9hc3luY1RvR2VuZXJhdG9yLmpzIjsKaW1wb3J0ICJyZWdlbmVyYXRvci1ydW50aW1lL3J1bnRpbWUuanMiOwppbXBvcnQgQ2FyZCBmcm9tICJAL2NvbXBvbmVudHMvQ2FyZC9DYXJkLnZ1ZSI7CmltcG9ydCBCdXR0b24gZnJvbSAiQC9jb21wb25lbnRzL0J1dHRvbi9CdXR0b24udnVlIjsKaW1wb3J0IElucHV0IGZyb20gIkAvY29tcG9uZW50cy9JbnB1dC9JbnB1dC52dWUiOwppbXBvcnQgSW1wb3J0Q3N2IGZyb20gIkAvY29tcG9uZW50cy9JbXBvcnRDc3YvSW1wb3J0Q3N2LnZ1ZSI7CmltcG9ydCBheGlvcyBmcm9tICJAL2F4aW9zLmpzIjsKaW1wb3J0IHsgc2F2ZUFzIH0gZnJvbSAiZmlsZS1zYXZlciI7CmV4cG9ydCBkZWZhdWx0IHsKICBuYW1lOiAiVXBsb2FkVXNlciIsCiAgY29tcG9uZW50czogewogICAgQ2FyZDogQ2FyZCwKICAgIEJ1dHRvbjogQnV0dG9uLAogICAgSW5wdXQ6IElucHV0LAogICAgSW1wb3J0Q3N2OiBJbXBvcnRDc3YKICB9LAogIGRhdGE6IGZ1bmN0aW9uIGRhdGEoKSB7CiAgICByZXR1cm4gewogICAgICBjc3ZGaWxlOiBudWxsLAogICAgICBoZWFkZXJzOiBbewogICAgICAgIHRleHQ6ICJOb21lIiwKICAgICAgICBhbGlnbjogInN0YXJ0IiwKICAgICAgICB2YWx1ZTogInVzZV9uYW1lIgogICAgICB9LCB7CiAgICAgICAgdGV4dDogIkUtbWFpbCIsCiAgICAgICAgdmFsdWU6ICJ1c2VfZW1haWwiCiAgICAgIH0sIHsKICAgICAgICB0ZXh0OiAiRWRpdGFyIiwKICAgICAgICB2YWx1ZTogImVkaXQiCiAgICAgIH0sIHsKICAgICAgICB0ZXh0OiAiRXhjbHVpciIsCiAgICAgICAgdmFsdWU6ICJkZWxldGUiCiAgICAgIH1dLAogICAgICB1c2VyczogW10sCiAgICAgIGRpYWxvZzogZmFsc2UsCiAgICAgIHRlc3RlOiB1bmRlZmluZWQsCiAgICAgIGRpYWxvZ0NzdkVycm9yOiBmYWxzZSwKICAgICAgZXJyb3JzOiAiIgogICAgfTsKICB9LAogIGJlZm9yZU1vdW50OiBmdW5jdGlvbiBiZWZvcmVNb3VudCgpIHsKICAgIHRoaXMuZ2V0VXNlcnMoKTsKICB9LAogIG1ldGhvZHM6IHsKICAgIGdldFVzZXJzOiBmdW5jdGlvbiAoKSB7CiAgICAgIHZhciBfZ2V0VXNlcnMgPSBfYXN5bmNUb0dlbmVyYXRvciggLyojX19QVVJFX18qL3JlZ2VuZXJhdG9yUnVudGltZS5tYXJrKGZ1bmN0aW9uIF9jYWxsZWUoKSB7CiAgICAgICAgdmFyIHJlc3BvbnNlOwogICAgICAgIHJldHVybiByZWdlbmVyYXRvclJ1bnRpbWUud3JhcChmdW5jdGlvbiBfY2FsbGVlJChfY29udGV4dCkgewogICAgICAgICAgd2hpbGUgKDEpIHsKICAgICAgICAgICAgc3dpdGNoIChfY29udGV4dC5wcmV2ID0gX2NvbnRleHQubmV4dCkgewogICAgICAgICAgICAgIGNhc2UgMDoKICAgICAgICAgICAgICAgIF9jb250ZXh0Lm5leHQgPSAyOwogICAgICAgICAgICAgICAgcmV0dXJuIGF4aW9zLmdldCgiL2FkbWluaXN0cmF0b3IvIik7CgogICAgICAgICAgICAgIGNhc2UgMjoKICAgICAgICAgICAgICAgIHJlc3BvbnNlID0gX2NvbnRleHQuc2VudDsKICAgICAgICAgICAgICAgIHRoaXMudXNlcnMgPSByZXNwb25zZS5kYXRhLmRhdGE7CgogICAgICAgICAgICAgIGNhc2UgNDoKICAgICAgICAgICAgICBjYXNlICJlbmQiOgogICAgICAgICAgICAgICAgcmV0dXJuIF9jb250ZXh0LnN0b3AoKTsKICAgICAgICAgICAgfQogICAgICAgICAgfQogICAgICAgIH0sIF9jYWxsZWUsIHRoaXMpOwogICAgICB9KSk7CgogICAgICBmdW5jdGlvbiBnZXRVc2VycygpIHsKICAgICAgICByZXR1cm4gX2dldFVzZXJzLmFwcGx5KHRoaXMsIGFyZ3VtZW50cyk7CiAgICAgIH0KCiAgICAgIHJldHVybiBnZXRVc2VyczsKICAgIH0oKSwKICAgIGltcG9ydERhdGE6IGZ1bmN0aW9uICgpIHsKICAgICAgdmFyIF9pbXBvcnREYXRhID0gX2FzeW5jVG9HZW5lcmF0b3IoIC8qI19fUFVSRV9fKi9yZWdlbmVyYXRvclJ1bnRpbWUubWFyayhmdW5jdGlvbiBfY2FsbGVlMigpIHsKICAgICAgICB2YXIgZm9ybURhdGEsIF95aWVsZCRheGlvcyRwb3N0LCBkYXRhOwoKICAgICAgICByZXR1cm4gcmVnZW5lcmF0b3JSdW50aW1lLndyYXAoZnVuY3Rpb24gX2NhbGxlZTIkKF9jb250ZXh0MikgewogICAgICAgICAgd2hpbGUgKDEpIHsKICAgICAgICAgICAgc3dpdGNoIChfY29udGV4dDIucHJldiA9IF9jb250ZXh0Mi5uZXh0KSB7CiAgICAgICAgICAgICAgY2FzZSAwOgogICAgICAgICAgICAgICAgaWYgKCF0aGlzLmNzdkZpbGUpIHsKICAgICAgICAgICAgICAgICAgX2NvbnRleHQyLm5leHQgPSAxNzsKICAgICAgICAgICAgICAgICAgYnJlYWs7CiAgICAgICAgICAgICAgICB9CgogICAgICAgICAgICAgICAgZm9ybURhdGEgPSBuZXcgRm9ybURhdGEoKTsKICAgICAgICAgICAgICAgIGZvcm1EYXRhLmFwcGVuZCgiY3N2RmlsZSIsIHRoaXMuY3N2RmlsZSk7CiAgICAgICAgICAgICAgICBfY29udGV4dDIucHJldiA9IDM7CiAgICAgICAgICAgICAgICBfY29udGV4dDIubmV4dCA9IDY7CiAgICAgICAgICAgICAgICByZXR1cm4gYXhpb3MucG9zdCgiL3VzZXIvcmVnaXN0ZXIiLCBmb3JtRGF0YSwgewogICAgICAgICAgICAgICAgICBoZWFkZXJzOiB7CiAgICAgICAgICAgICAgICAgICAgIkNvbnRlbnQtVHlwZSI6ICJtdWx0aXBhcnQvZm9ybS1kYXRhIgogICAgICAgICAgICAgICAgICB9CiAgICAgICAgICAgICAgICB9KTsKCiAgICAgICAgICAgICAgY2FzZSA2OgogICAgICAgICAgICAgICAgX3lpZWxkJGF4aW9zJHBvc3QgPSBfY29udGV4dDIuc2VudDsKICAgICAgICAgICAgICAgIGRhdGEgPSBfeWllbGQkYXhpb3MkcG9zdC5kYXRhOwoKICAgICAgICAgICAgICAgIGlmIChkYXRhLnN1Y2Nlc3MgJiYgZGF0YS5jc3ZFcnJvciA9PSAiIikgewogICAgICAgICAgICAgICAgICB0aGlzLiR0b2FzdGVkLnN1Y2Nlc3MoIkRhZG9zIGltcG9ydGFkb3MhIik7CiAgICAgICAgICAgICAgICAgIHNldFRpbWVvdXQoZnVuY3Rpb24gKCkgewogICAgICAgICAgICAgICAgICAgIHdpbmRvdy5sb2NhdGlvbi5yZWxvYWQoKTsKICAgICAgICAgICAgICAgICAgfSwgMzAwMCk7CiAgICAgICAgICAgICAgICB9IGVsc2UgaWYgKGRhdGEuY3N2RXJyb3IgIT09ICIiKSB7CiAgICAgICAgICAgICAgICAgIHRoaXMuZGlhbG9nQ3N2RXJyb3IgPSB0cnVlOwogICAgICAgICAgICAgICAgICB0aGlzLmVycm9ycyA9IGRhdGEuY3N2RXJyb3I7CiAgICAgICAgICAgICAgICB9CgogICAgICAgICAgICAgICAgX2NvbnRleHQyLm5leHQgPSAxNTsKICAgICAgICAgICAgICAgIGJyZWFrOwoKICAgICAgICAgICAgICBjYXNlIDExOgogICAgICAgICAgICAgICAgX2NvbnRleHQyLnByZXYgPSAxMTsKICAgICAgICAgICAgICAgIF9jb250ZXh0Mi50MCA9IF9jb250ZXh0MlsiY2F0Y2giXSgzKTsKICAgICAgICAgICAgICAgIGNvbnNvbGUubG9nKF9jb250ZXh0Mi50MCk7CiAgICAgICAgICAgICAgICB0aGlzLiR0b2FzdGVkLmVycm9yKCJPY29ycmV1IHVtIGVycm8gbmEgcmVxdWlzacOnw6NvIik7CgogICAgICAgICAgICAgIGNhc2UgMTU6CiAgICAgICAgICAgICAgICBfY29udGV4dDIubmV4dCA9IDE4OwogICAgICAgICAgICAgICAgYnJlYWs7CgogICAgICAgICAgICAgIGNhc2UgMTc6CiAgICAgICAgICAgICAgICB0aGlzLiRyZWZzLmNzdi4kcmVmcy5pbnB1dC5jbGljaygpOwoKICAgICAgICAgICAgICBjYXNlIDE4OgogICAgICAgICAgICAgIGNhc2UgImVuZCI6CiAgICAgICAgICAgICAgICByZXR1cm4gX2NvbnRleHQyLnN0b3AoKTsKICAgICAgICAgICAgfQogICAgICAgICAgfQogICAgICAgIH0sIF9jYWxsZWUyLCB0aGlzLCBbWzMsIDExXV0pOwogICAgICB9KSk7CgogICAgICBmdW5jdGlvbiBpbXBvcnREYXRhKCkgewogICAgICAgIHJldHVybiBfaW1wb3J0RGF0YS5hcHBseSh0aGlzLCBhcmd1bWVudHMpOwogICAgICB9CgogICAgICByZXR1cm4gaW1wb3J0RGF0YTsKICAgIH0oKSwKICAgIGF0dGFjaEZpbGU6IGZ1bmN0aW9uIGF0dGFjaEZpbGUoZmlsZSkgewogICAgICB0aGlzLmNzdkZpbGUgPSBmaWxlOwogICAgfSwKICAgIEVkaXQ6IGZ1bmN0aW9uIEVkaXQoaXRlbSkgewogICAgICB0aGlzLiRyb3V0ZXIucHVzaCh7CiAgICAgICAgbmFtZTogIkVkaXRQcm9maWxlIiwKICAgICAgICBwYXJhbXM6IHsKICAgICAgICAgIHVzZXI6IGl0ZW0KICAgICAgICB9CiAgICAgIH0pOwogICAgfSwKICAgIERlbGV0ZTogZnVuY3Rpb24gRGVsZXRlKGl0ZW0pIHsKICAgICAgdGhpcy5kaWFsb2cgPSB0cnVlOwogICAgICB0aGlzLnRlc3RlID0gaXRlbTsKICAgICAgY29uc29sZS5sb2coaXRlbS51c2VfY29kKTsKICAgIH0sCiAgICBEZWxldGVVc2VyOiBmdW5jdGlvbiBEZWxldGVVc2VyKCkgewogICAgICB2YXIgX3RoaXMgPSB0aGlzOwoKICAgICAgcmV0dXJuIF9hc3luY1RvR2VuZXJhdG9yKCAvKiNfX1BVUkVfXyovcmVnZW5lcmF0b3JSdW50aW1lLm1hcmsoZnVuY3Rpb24gX2NhbGxlZTMoKSB7CiAgICAgICAgdmFyIHJlc3BvbnNlOwogICAgICAgIHJldHVybiByZWdlbmVyYXRvclJ1bnRpbWUud3JhcChmdW5jdGlvbiBfY2FsbGVlMyQoX2NvbnRleHQzKSB7CiAgICAgICAgICB3aGlsZSAoMSkgewogICAgICAgICAgICBzd2l0Y2ggKF9jb250ZXh0My5wcmV2ID0gX2NvbnRleHQzLm5leHQpIHsKICAgICAgICAgICAgICBjYXNlIDA6CiAgICAgICAgICAgICAgICBfY29udGV4dDMubmV4dCA9IDI7CiAgICAgICAgICAgICAgICByZXR1cm4gYXhpb3MuZGVsZXRlKCIvYWRtaW5pc3RyYXRvci8iLmNvbmNhdChfdGhpcy50ZXN0ZS51c2VfY29kLCAiLyIpKTsKCiAgICAgICAgICAgICAgY2FzZSAyOgogICAgICAgICAgICAgICAgcmVzcG9uc2UgPSBfY29udGV4dDMuc2VudDsKICAgICAgICAgICAgICAgIF90aGlzLmRpYWxvZyA9IGZhbHNlOwoKICAgICAgICAgICAgICAgIGlmIChyZXNwb25zZS5kYXRhLnN1Y2Nlc3MpIHsKICAgICAgICAgICAgICAgICAgX2NvbnRleHQzLm5leHQgPSA2OwogICAgICAgICAgICAgICAgICBicmVhazsKICAgICAgICAgICAgICAgIH0KCiAgICAgICAgICAgICAgICByZXR1cm4gX2NvbnRleHQzLmFicnVwdCgicmV0dXJuIiwgX3RoaXMuJHRvYXN0ZWQuZXJyb3IoIk9jb3JyZXUgdW0gZXJybyBuYSByZXF1aXNpw6fDo28iKSk7CgogICAgICAgICAgICAgIGNhc2UgNjoKICAgICAgICAgICAgICAgIF90aGlzLiR0b2FzdGVkLnN1Y2Nlc3MoIlVzdcOhcmlvIGV4Y2x1w61kbyBjb20gc3VjZXNzbyEiKTsKCiAgICAgICAgICAgICAgICBzZXRUaW1lb3V0KGZ1bmN0aW9uICgpIHsKICAgICAgICAgICAgICAgICAgd2luZG93LmxvY2F0aW9uLnJlbG9hZCgpOwogICAgICAgICAgICAgICAgfSwgMTUwMCk7CgogICAgICAgICAgICAgIGNhc2UgODoKICAgICAgICAgICAgICBjYXNlICJlbmQiOgogICAgICAgICAgICAgICAgcmV0dXJuIF9jb250ZXh0My5zdG9wKCk7CiAgICAgICAgICAgIH0KICAgICAgICAgIH0KICAgICAgICB9LCBfY2FsbGVlMyk7CiAgICAgIH0pKSgpOwogICAgfSwKICAgIERvd25sb2FkRXJyb3JzOiBmdW5jdGlvbiBEb3dubG9hZEVycm9ycygpIHsKICAgICAgdGhpcy5kaWFsb2dDc3ZFcnJvciA9IGZhbHNlOwogICAgICB2YXIgYmxvYiA9IG5ldyBCbG9iKFt0aGlzLmVycm9yc10sIHsKICAgICAgICB0eXBlOiAidGV4dC9jc3YiCiAgICAgIH0pOwogICAgICBzYXZlQXMoYmxvYiwgIkVycm9zLmNzdiIpOwogICAgfQogIH0KfTs="},{"version":3,"sources":["/Users/charlesramos/Documents/Aulas/Bureauto/BureAuto/src/views/UploadUser/UploadUser.js"],"names":["Card","Button","Input","ImportCsv","axios","saveAs","name","components","data","csvFile","headers","text","align","value","users","dialog","teste","undefined","dialogCsvError","errors","beforeMount","getUsers","methods","get","response","importData","formData","FormData","append","post","success","csvError","$toasted","setTimeout","window","location","reload","console","log","error","$refs","csv","input","click","attachFile","file","Edit","item","$router","push","params","user","Delete","use_cod","DeleteUser","delete","DownloadErrors","blob","Blob","type"],"mappings":"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","sourcesContent":["import Card from \"@/components/Card/Card.vue\"\nimport Button from \"@/components/Button/Button.vue\"\nimport Input from \"@/components/Input/Input.vue\"\nimport ImportCsv from \"@/components/ImportCsv/ImportCsv.vue\"\nimport axios from \"@/axios.js\"\nimport {saveAs} from \"file-saver\"\n\nexport default {\n    name: \"UploadUser\",\n    components: {\n        Card,\n        Button,\n        Input,\n        ImportCsv\n\n    },\n    data: function() {\n        return {\n            csvFile: null,\n            headers: [{text: \"Nome\", align: \"start\", value: \"use_name\"}, {text: \"E-mail\",\n                value: \"use_email\"\n            }, {text: \"Editar\", value: \"edit\"}, {text: \"Excluir\", value: \"delete\"}],\n            users: [],\n            dialog: false,\n            teste: undefined,\n            dialogCsvError: false,\n            errors: \"\"\n        }\n    },\n    beforeMount: function() {\n        this.getUsers()\n    },\n    methods: {\n        getUsers: async function() {\n            const response = await axios.get(\"/administrator/\")\n            this.users = response.data.data\n        },\n        importData: async function() {\n            if (this.csvFile) {\n                const formData = new FormData()\n                formData.append(\"csvFile\", this.csvFile)\n                try {\n                    const {data} = await axios.post(\"/user/register\", formData, {\n                        headers: {\n                            \"Content-Type\": \"multipart/form-data\"\n                        }\n                    })\n                    if (data.success && data.csvError == \"\") {\n                        this.$toasted.success(\"Dados importados!\")\n                        setTimeout(function() { \n                            window.location.reload()\n                        }, 3000)\n                        \n                    } else if (data.csvError !== \"\") {\n                        this.dialogCsvError = true\n                        this.errors = data.csvError\n                    }\n                } catch (error) {\n                    console.log(error)\n                    this.$toasted.error(\"Ocorreu um erro na requisição\")\n                }\n            } else {\n                this.$refs.csv.$refs.input.click()\n            }\n        },\n        attachFile: function(file) {\n            this.csvFile = file\n        },\n        Edit(item) {\n            this.$router.push({name: \"EditProfile\", params: {user: item}})\n        },\n        Delete(item) {\n            this.dialog = true\n            this.teste = item\n            console.log(item.use_cod)\n        },\n        async DeleteUser() {\n            const response = await axios.delete(`/administrator/${this.teste.use_cod}/`)\n            this.dialog = false\n            if (!response.data.success) {\n                return this.$toasted.error(\"Ocorreu um erro na requisição\")\n            }\n            this.$toasted.success(\"Usuário excluído com sucesso!\")\n            setTimeout(function() { \n                window.location.reload()\n            }, 1500)\n        },\n        DownloadErrors() {\n            this.dialogCsvError = false\n            const blob = new Blob([this.errors], {type: \"text/csv\"})\n            saveAs(blob, \"Erros.csv\")\n        }\n    }\n}"]}]}